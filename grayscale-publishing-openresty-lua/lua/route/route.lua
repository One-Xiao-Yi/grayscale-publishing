---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by xiaoy.
--- DateTime: 2023/1/30 15:49
---
local json = require("cjson")
local redisClient = require("resty.redis")
local redis = redisClient:new()
redis:set_timeout(2000)
local ip = "127.0.0.1"
local port = 6379

local ok, err = redis:connect(ip, port)
if not ok then
    ngx.log(ngx.ERR, "连接redis失败: ", err)
    return
end

local rule
rule, err = redis:get('RULE_REDIS_KEY')
if not rule then
    ngx.log(ngx.ERR, "查询路由规则失败 ", err)
    return
end

local pool_max_idle_time = 10000 -- 毫秒
local pool_size = 100 --连接池大小
local freeOk, freeErr = redis:set_keepalive(pool_max_idle_time, pool_size)
if not freeOk then
    ngx.log(ngx.ERR, "释放redis连接失败: ", freeErr)
    return
end

local jsonRule = json.decode(rule)

if jsonRule.ruleType == 1 and jsonRule.resources then
    ngx.log(ngx.INFO, "jsonRule.resources type: ", type(jsonRule.resources))
    local ipUtil = require("ipUtil")
    local ip = ipUtil.getIp()
    for index, cacheIP in pairs(jsonRule.resources) do
        ngx.log(ngx.INFO, "路由IP: " .. cacheIP .. ", Client IP: " .. ip)
        if ip == cacheIP then
            ngx.req.set_header("GRAYSCALE_PUBLISHING", 'grayscale')
            return
        end
    end
end